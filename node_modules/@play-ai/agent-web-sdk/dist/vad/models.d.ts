export interface SpeechProbabilities {
    notSpeech: number;
    isSpeech: number;
}
export interface Model {
    reset_state: () => void;
    process: (arr: Float32Array) => Promise<SpeechProbabilities>;
}
export declare class Silero {
    private ort?;
    _session?: import('onnxruntime-web').InferenceSession;
    _h?: import('onnxruntime-web').Tensor;
    _c?: import('onnxruntime-web').Tensor;
    _sr?: import('onnxruntime-web').Tensor;
    static new: () => Promise<Silero>;
    init: () => Promise<void>;
    reset_state: () => void;
    process: (audioFrame: Float32Array) => Promise<SpeechProbabilities>;
}
